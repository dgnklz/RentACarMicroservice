<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.kodlamaio.inventoryService.dataAccess.BrandRepository"/>
    <fullyQualifiedTypeName name="com.netflix.discovery.endpoint.EndpointUtils.InstanceInfoBasedUrlRandomizer"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PutMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.DeleteMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="com.kodlamaio.inventoryService.business.responses.get.GetCarResponse"/>
    <fullyQualifiedTypeName name="com.kodlamaio.inventoryService.business.responses.get.GetModelResponse"/>
    <fullyQualifiedTypeName name="com.kodlamaio.inventoryService.business.constants.MessagesForBrand"/>
    <fullyQualifiedTypeName name="com.kodlamaio.inventoryService.business.constants.MessagesForModel"/>
    <fullyQualifiedTypeName name="com.kodlamaio.common.utilities.exceptions.BusinessException"/>
    <fullyQualifiedTypeName name="com.kodlamaio.inventoryService.business.constants.MessagesForCar"/>
    <fullyQualifiedTypeName name="com.kodlamaio.inventoryService.business.abstracts.BrandService"/>
    <fullyQualifiedTypeName name="com.kodlamaio.inventoryService.business.abstracts.ModelService"/>
    <fullyQualifiedTypeName name="com.kodlamaio.inventoryService.business.responses.get.GetBrandResponse"/>
    <fullyQualifiedTypeName name="org.hibernate.sql.Update"/>
    <fullyQualifiedTypeName name="com.kodlamaio.inventoryService.business.responses.update.UpdateBrandResponse"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="javax.persistence.Column"/>
    <fullyQualifiedTypeName name="java.time.LocalDateTime"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="com.kodlamaio.rentalService.dataAccess.RentalRepository"/>
    <fullyQualifiedTypeName name="com.kodlamaio.rentalService.business.requests.create.CreateRentalRequest"/>
    <fullyQualifiedTypeName name="com.kodlamaio.rentalService.entities.Rental"/>
    <fullyQualifiedTypeName name="org.apache.kafka.common.Uuid"/>
    <fullyQualifiedTypeName name="java.util.UUID"/>
    <fullyQualifiedTypeName name="com.kodlamaio.rentalService.business.responses.create.CreateRentalResponse"/>
    <fullyQualifiedTypeName name="com.kodlamaio.rentalService.business.abstracts.RentalService"/>
    <fullyQualifiedTypeName name="com.kodlamaio.common.utilities.mapping.ModelMapperService"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.NotBlank"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="lombok.Value"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.config.TopicBuilder"/>
    <fullyQualifiedTypeName name="org.hibernate.annotations.common.util.impl.LoggerFactory"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.admin.NewTopic"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.KafkaTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.messaging.support.MessageBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.support.KafkaHeaders"/>
    <fullyQualifiedTypeName name="org.apache.kafka.common.protocol.Message"/>
    <fullyQualifiedTypeName name="org.apache.logging.log4j.message.Message"/>
    <fullyQualifiedTypeName name="org.springframework.messaging.Message"/>
    <fullyQualifiedTypeName name="com.kodlamaio.rentalService.configurations.kafka.RentalProducer"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="com.kodlamaio.inventoryService.kafka.RentalConsumer"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.KafkaListener"/>
    <fullyQualifiedTypeName name="com.kodlamaio.common.events.RentalCreatedEvent"/>
    <fullyQualifiedTypeName name="com.kodlamaio.inventoryService.entities.Car"/>
    <fullyQualifiedTypeName name="com.kodlamaio.inventoryService.business.responses.update.UpdateCarStateResponse"/>
    <fullyQualifiedTypeName name="com.kodlamaio.inventoryService.business.abstracts.CarService"/>
</qualifiedTypeNameHistroy>
